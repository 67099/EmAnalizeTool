// Source code is decompiled from a .class file using FernFlower decompiler.
import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;
import java.util.Properties;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.Multipart;
import javax.mail.Session;
import javax.mail.Message.RecipientType;
import javax.mail.internet.MimeMessage;
import javax.mail.util.SharedFileInputStream;

public class EmTool {
   public EmTool() {
   }

   public static void main(String[] var0) {
      try {
         boolean var1 = true;
         Scanner var2 = new Scanner(System.in);

         File var3;
         for(var3 = null; var1; var1 = false) {
            System.out.print("enter path to eml file: ");
            String var4 = var2.nextLine().trim();
            var2.close();
            var3 = new File(var4);
            if (!var3.exists()) {
               System.out.println("Error 404 |الملف غير موجود!");
               return;
            }
         }

         Session var18 = Session.getDefaultInstance(new Properties());
         SharedFileInputStream var5 = new SharedFileInputStream(var3);
         MimeMessage var6 = new MimeMessage(var18, var5);
         String var7 = var6.getSubject();
         String var8 = Arrays.toString(var6.getFrom());
         String var9 = Arrays.toString(var6.getRecipients(RecipientType.TO));
         String var10 = var6.getHeader("Return-Path", (String)null);
         String var11 = var6.getHeader("Message-ID", (String)null);
         String var12 = var6.getHeader("Received-SPF", (String)null);
         System.out.println("\n--- معلومات الرسالة ---");
         System.out.println("Subject: " + var7);
         System.out.println("From: " + var8);
         System.out.println("To: " + var9);
         System.out.println("Return-Path: " + var10);
         System.out.println("Message-ID: " + var11);
         System.out.println("SPF: " + (var12 != null ? var12 : "not found "));
         String var13 = getTextFromMessage(var6);
         List var14 = extractAndDefangUrls(var13);
         System.out.println("\n--- links (Defanged) ---");
         if (var14.isEmpty()) {
            System.out.println("No URLS found");
         } else {
            Iterator var15 = var14.iterator();

            while(var15.hasNext()) {
               String var16 = (String)var15.next();
               System.out.println(var16);
            }
         }

         var5.close();
      } catch (Exception var17) {
         var17.printStackTrace();
      }

   }

   private static String getTextFromMessage(Message var0) throws Exception {
      if (var0.isMimeType("text/plain")) {
         return var0.getContent().toString();
      } else if (!var0.isMimeType("multipart/*")) {
         return "";
      } else {
         Multipart var1 = (Multipart)var0.getContent();
         StringBuilder var2 = new StringBuilder();

         for(int var3 = 0; var3 < var1.getCount(); ++var3) {
            BodyPart var4 = var1.getBodyPart(var3);
            var2.append(getTextFromPart(var4));
         }

         return var2.toString();
      }
   }

   private static String getTextFromPart(BodyPart var0) throws Exception {
      if (var0.isMimeType("text/plain")) {
         return var0.getContent().toString();
      } else if (!var0.isMimeType("multipart/*")) {
         return "";
      } else {
         Multipart var1 = (Multipart)var0.getContent();
         StringBuilder var2 = new StringBuilder();

         for(int var3 = 0; var3 < var1.getCount(); ++var3) {
            var2.append(getTextFromPart(var1.getBodyPart(var3)));
         }

         return var2.toString();
      }
   }

   private static List<String> extractAndDefangUrls(String var0) {
      ArrayList var1 = new ArrayList();
      Pattern var2 = Pattern.compile("(https?://\\S+)", 2);
      Matcher var3 = var2.matcher(var0);

      while(var3.find()) {
         String var4 = var3.group();
         var1.add(defangLink(var4));
      }

      return var1;
   }

   private static String defangLink(String var0) {
      return var0.replace("http", "hxxp").replace(".", "[.]");
   }
}
